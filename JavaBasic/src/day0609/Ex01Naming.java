package day0609;

public class Ex01Naming {
    //자바의 명명규칙
    //공통규칙
    // 1. 모든 이름은 대소문자가 엄격하게 구분된다.
    // 2. 이름의 중간이나 맨 끝에는 숫자가 들어갈 수 있지만 숫자로 이름을 시작할 수 없다..
    // 3. _를 제외한 모든 특수문자는 사용할 수 없다.
    // 4. 자바에서는 내부적으로 기능이 정의되어있는 50가지의 키워드가 존재한다.
    // 해당 키워드로는 이름을 만들 수 없으므로 외워야 한다.
    // 만약 여러분들이 이름 지은 것이 보라색으로 표시되면 추가적인 단어를 붙이거나 대소문자를 다르게하여 들어주면 된다.

    //낙타등 표기법과 뱀표기법
    //낙타등 표기법: 만약 이름이 여러 단어일 경우 두 번째 단어부터는 쉽게 구분을 하기 위해 첫 글자를 대문자로 적어준다.
    //뱀 표기법: 만약 모든 철자를 대문자로 적는 경우, 단어간의 구분을 해주기 위해 사이에 _를 넣어주는 표기법  * 상수 선언 시 사용

    //각종 개념에 대한 명명법
    // 1. 패키지: 내부의 포함된 클래스들의 성격을 나타내는 한 단어. **** 소문자 ****
    // 2. 클래스: 대문자로 시작하고 낙타등 표기법을 사용하는 명사
    // 3. 메소드: 소문자로 시작하고 낙타등 표기법을 사용하는 동사
    // 4. 변수: 소문자로 시작하고 낙타등 표기법을 사용하는 명사
    // 5. 상수: 뱀 표기법을 사용하는 명사

    // 변수 선언법: 할당 연산자를 통해 타입과 맞는 값을 넣어줌
    // 기본형:  해당 공간에 실제 값이 들어감
    // 참조형: 해당 공간에 주소값이 들어감 그 주소를 참조해서 들어가 값을 알 수 있기 때문
    // 참조형: 배열형, 인터페이스형, 클래스형

    // 스택 영역: 변수 이름, 변수의 값, 참조형 데이터 타입의 주소값
    // 힙 영역: 참조형 데이터 타입의 실제 값이 저장됨

    //연산자
    // 전위 연산자: 우선순위가 높다. 해당 줄에서 가장 먼저 실행됨

    // 자바에서 임포트 안 해도 되는 클래스 단 2개 : String, java.lang.Object(모든 클래스들의 부모)
    // 오버라이드: 부모 클래스의 메소드를 자식 클래스가 재정의
    // 래퍼(포장) 클래스 : 기본형 데이터 타입을 클래스의 모습으로 덮어둔 것
    // ex) Integer, String















}
